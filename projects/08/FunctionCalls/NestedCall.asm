@256
D=A
@SP
M=D
D=0
@LCL
MD=D-1
@ARG
MD=D-1
@THIS
MD=D-1
@THAT
MD=D-1
@Sys.init_return_address$
D=A
@SP
A=M
M=D
@SP
AM=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
AM=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
AM=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(Sys.init_return_address$)
(Sys.init)
@4000
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@3
M=D
@5000
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@4
M=D
@Sys.main_return_address$5
D=A
@SP
A=M
M=D
@SP
AM=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
AM=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
AM=M+1
@5
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.main_return_address$5)
@SP
AM=M-1
D=M
@6
M=D
(Sys:LOOP)
@Sys:LOOP
0;JMP
(Sys.main)
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@4001
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@3
M=D
@5001
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@4
M=D
@200
D=A
@SP
A=M
M=D
@SP
AM=M+1
@1
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@40
D=A
@SP
A=M
M=D
@SP
AM=M+1
@2
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6
D=A
@SP
A=M
M=D
@SP
AM=M+1
@3
D=A
@LCL
D=D+M
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@123
D=A
@SP
A=M
M=D
@SP
AM=M+1
@Sys.add12_return_address$21
D=A
@SP
A=M
M=D
@SP
AM=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
AM=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
AM=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
AM=M+1
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12_return_address$21)
@SP
AM=M-1
D=M
@5
M=D
@0
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@1
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@2
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@3
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@4
D=A
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL
D=M
@R13
M=D //Frame = LCL, R13 holds *LCL
@5
A=D-A //Frame - 5
D=M  //return address to D
@R14
M=D //R14 holds return address
@SP
AM=M-1
D=M // Pop stack value
@ARG
A=M
M=D //put it on *ARG
@ARG
D=M+1 //ARG+1
@SP
M=D //SP=ARG+1
@R13
AM=M-1//Frame-1
D=M
@THAT
M=D //THAT=*(Frame-1)
@R13
AM=M-1 //Frame-2
D=M
@THIS
M=D //THIS=*(Frame-2)
@R13
AM=M-1 //Frame-3
D=M
@ARG
M=D //ARG=*(Frame-3)
@R13
AM=M-1 //Frame-4
D=M
@LCL
M=D //LCL=*(Frame-4)
@R14 //return address
A=M
0;JMP
(Sys.add12)
@4002
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@3
M=D
@5002
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
@4
M=D
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
AM=M+1
@12
D=A
@SP
A=M
M=D
@SP
AM=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@LCL
D=M
@R13
M=D //Frame = LCL, R13 holds *LCL
@5
A=D-A //Frame - 5
D=M  //return address to D
@R14
M=D //R14 holds return address
@SP
AM=M-1
D=M // Pop stack value
@ARG
A=M
M=D //put it on *ARG
@ARG
D=M+1 //ARG+1
@SP
M=D //SP=ARG+1
@R13
AM=M-1//Frame-1
D=M
@THAT
M=D //THAT=*(Frame-1)
@R13
AM=M-1 //Frame-2
D=M
@THIS
M=D //THIS=*(Frame-2)
@R13
AM=M-1 //Frame-3
D=M
@ARG
M=D //ARG=*(Frame-3)
@R13
AM=M-1 //Frame-4
D=M
@LCL
M=D //LCL=*(Frame-4)
@R14 //return address
A=M
0;JMP
