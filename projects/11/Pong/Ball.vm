function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0
// Let begin x
push argument 0
pop this 0
// Let end
// Let begin y
push argument 1
pop this 1
// Let end
// Let begin leftWall
push argument 2
pop this 10
// Let end
// Let begin rightWall
push argument 3
push constant 6
sub
pop this 11
// Let end
// Let begin topWall
push argument 4
pop this 12
// Let end
// Let begin bottomWall
push argument 5
push constant 6
sub
pop this 13
// Let end
// Let begin wall
push constant 0
pop this 14
// Let end
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return
function Ball.setDestination 3
push argument 0
pop pointer 0
// Let begin lengthx
push argument 1
push this 0
sub
pop this 2
// Let end
// Let begin lengthy
push argument 2
push this 1
sub
pop this 3
// Let end
// Let begin dx
push this 2
call Math.abs 1
pop local 0
// Let end
// Let begin dy
push this 3
call Math.abs 1
pop local 1
// Let end
// Let begin invert
push local 0
push local 1
lt
pop this 7
// Let end
push this 7
if-goto setDestination-0-true
// Let begin positivex
push this 0
push argument 1
lt
pop this 8
// Let end
// Let begin positivey
push this 1
push argument 2
lt
pop this 9
// Let end
goto setDestination-0-end
label setDestination-0-true
// Let begin temp
push local 0
pop local 2
// Let end
// Let begin dx
push local 1
pop local 0
// Let end
// Let begin dy
push local 2
pop local 1
// Let end
// Let begin positivex
push this 1
push argument 2
lt
pop this 8
// Let end
// Let begin positivey
push this 0
push argument 1
lt
pop this 9
// Let end
label setDestination-0-end
// Let begin d
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
// Let end
// Let begin straightD
push constant 2
push local 1
call Math.multiply 2
pop this 5
// Let end
// Let begin diagonalD
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
// Let end
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto move-0-true
// Let begin d
push this 4
push this 6
add
pop this 4
// Let end
push this 9
if-goto move-1-true
push this 7
if-goto move-2-true
// Let begin y
push this 1
push constant 4
sub
pop this 1
// Let end
goto move-2-end
label move-2-true
// Let begin x
push this 0
push constant 4
sub
pop this 0
// Let end
label move-2-end
goto move-1-end
label move-1-true
push this 7
if-goto move-3-true
// Let begin y
push this 1
push constant 4
add
pop this 1
// Let end
goto move-3-end
label move-3-true
// Let begin x
push this 0
push constant 4
add
pop this 0
// Let end
label move-3-end
label move-1-end
goto move-0-end
label move-0-true
// Let begin d
push this 4
push this 5
add
pop this 4
// Let end
label move-0-end
push this 8
if-goto move-4-true
push this 7
if-goto move-5-true
// Let begin x
push this 0
push constant 4
sub
pop this 0
// Let end
goto move-5-end
label move-5-true
// Let begin y
push this 1
push constant 4
sub
pop this 1
// Let end
label move-5-end
goto move-4-end
label move-4-true
push this 7
if-goto move-6-true
// Let begin x
push this 0
push constant 4
add
pop this 0
// Let end
goto move-6-end
label move-6-true
// Let begin y
push this 1
push constant 4
add
pop this 1
// Let end
label move-6-end
label move-4-end
push this 0
push this 10
gt
not
if-goto move-7-true
goto move-7-end
label move-7-true
// Let begin wall
push constant 1
pop this 14
// Let end
// Let begin x
push this 10
pop this 0
// Let end
label move-7-end
push this 0
push this 11
lt
not
if-goto move-8-true
goto move-8-end
label move-8-true
// Let begin wall
push constant 2
pop this 14
// Let end
// Let begin x
push this 11
pop this 0
// Let end
label move-8-end
push this 1
push this 12
gt
not
if-goto move-9-true
goto move-9-end
label move-9-true
// Let begin wall
push constant 3
pop this 14
// Let end
// Let begin y
push this 12
pop this 1
// Let end
label move-9-end
push this 1
push this 13
lt
not
if-goto move-10-true
goto move-10-end
label move-10-true
// Let begin wall
push constant 4
pop this 14
// Let end
// Let begin y
push this 13
pop this 1
// Let end
label move-10-end
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return
function Ball.bounce 5
push argument 0
pop pointer 0
// Let begin divLengthx
push this 2
push constant 10
call Math.divide 2
pop local 2
// Let end
// Let begin divLengthy
push this 3
push constant 10
call Math.divide 2
pop local 3
// Let end
push argument 1
push constant 0
eq
if-goto bounce-0-true
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto bounce-1-true
// Let begin factor
push constant 5
pop local 4
// Let end
goto bounce-1-end
label bounce-1-true
// Let begin factor
push constant 20
pop local 4
// Let end
label bounce-1-end
goto bounce-0-end
label bounce-0-true
// Let begin factor
push constant 10
pop local 4
// Let end
label bounce-0-end
push this 14
push constant 1
eq
if-goto bounce-2-true
push this 14
push constant 2
eq
if-goto bounce-3-true
push this 14
push constant 3
eq
if-goto bounce-4-true
// Let begin newy
push constant 0
pop local 1
// Let end
// Let begin newx
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
// Let end
// Let begin newx
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
// Let end
goto bounce-4-end
label bounce-4-true
// Let begin newy
push constant 250
pop local 1
// Let end
// Let begin newx
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
// Let end
// Let begin newx
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
// Let end
label bounce-4-end
goto bounce-3-end
label bounce-3-true
// Let begin newx
push constant 0
pop local 0
// Let end
// Let begin newy
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
// Let end
// Let begin newy
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
// Let end
label bounce-3-end
goto bounce-2-end
label bounce-2-true
// Let begin newx
push constant 506
pop local 0
// Let end
// Let begin newy
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
// Let end
// Let begin newy
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
// Let end
label bounce-2-end
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
return
